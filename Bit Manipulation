Bitwise Operators : 
------------------
    - AND : & 
    - OR : |
    - XOR : ^   (0 for same and 1 for different)
    - NOT : ~   (Complement)
        => 1. Flip the digits
        => 2. Check if -ve :
                if YES -> 2's complement is considered
                else -> That's the resultant

    - Shift operators :
      ---------------
        - Right shift : >>   
            => 5 >> 2 means -> (101) is moved to the right by 2 places 
            => Basically, (X >> k) = (X / 2**k)
        - Left shift : <<  
            => 9 << 3 means -> (1001) is moved to the left by 3 places
            => Basically, (X << k) = (X * 2**k)
